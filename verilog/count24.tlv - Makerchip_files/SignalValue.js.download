(function(){var $,SignalValue,Utils;[$,Utils]=[];SignalValue=(function(){class SignalValue{static staticInit(TSW,TF){SignalValue.TIME_SLOT_WIDTH=TSW;return SignalValue.TRANSITION_FIELDS=TF;}
constructor(signal,cyc1){this.signal=signal;this.cyc=cyc1;this.transitions=this.signal.transitions;this.jumpTo(this.cyc);}
exists(){return this.signal.exists();}
mustExist(){if(!this.exists()){throw new SignalValue.NonExistentSignalError("Signal is missing from trace.");}}
getValue(){return this.transitions[this.transIndex+1];}
getValueStr(){console.log("getValue is a legacy function that should not be called.");return this.transitions[this.transIndex+1];}
_asSomething(def,map){if(!this.inTrace()){return def;}
if(!this.exists()){if(def===void 0){throw new SignalValue.NonExistentSignalError("Cannot return the value of a signal that is missing from trace.");}else{return def;}}
return map(this.transitions[this.transIndex+1]);}
getLegacyValue(){var ret;ret=this.getValue();if(!this.isValid()){ret="W"+ret;}
return ret;}
getPrevTransitionLegacyValue(){var ret;ret=this.getPrevTransitionValueStr();if(typeof ret==="undefined"){return void 0;}
if(!this.isPrevTransitionValid()){ret="W"+ret;}
return ret;}
getNextTransitionLegacyValue(){var ret;ret=this.getNextTransitionValueStr();if(typeof ret==="undefined"){return void 0;}
if(!this.isNextTransitionValid()){ret="W"+ret;}
return ret;}
getCycle(){return this.cyc;}
offEnd(){return typeof this.cyc==="undefined"||this.cyc>this.signal.waveData.endCycle;}
offBegining(){return typeof this.cyc==="undefined"||this.cyc<this.signal.waveData.startCycle;}
inTrace(){return typeof this.cyc!=="undefined"&&this.cyc<=this.signal.waveData.endCycle&&this.cyc>=this.signal.waveData.startCycle;}
getTransitionCycle(){return this.transitions[this.transIndex];}
getNextTransitionValueStr(){return this.transitions[this.transIndex+SignalValue.TRANSITION_FIELDS+1];}
getNextTransitionCycle(){return this.transitions[this.transIndex+SignalValue.TRANSITION_FIELDS];}
getPrevTransitionValueStr(){return this.transitions[this.transIndex-SignalValue.TRANSITION_FIELDS+1];}
isPrevTransitionValid(){return this.transitions[this.transIndex-SignalValue.TRANSITION_FIELDS+2];}
isNextTransitionValid(){return this.transitions[this.transIndex+SignalValue.TRANSITION_FIELDS+2];}
isValid(){return this.transitions[this.transIndex+2];}
stepTo(cyc){var c,forward;forward=cyc>this.cyc;if(forward){while((typeof(c=this.getNextTransitionCycle())!=="undefined")&&c<=cyc){this.transIndex+=SignalValue.TRANSITION_FIELDS;}}else{while(this.transIndex>=0&&this.getTransitionCycle()>cyc){this.transIndex-=SignalValue.TRANSITION_FIELDS;}}
this.cyc=cyc;return this;}
goTo(cyc){if(typeof this.transitions[this.transIndex]==="undefined"||Math.abs(cyc-this.cyc)>this.TIME_SLOT_WIDTH){this.jumpTo(cyc);}else{this.stepTo(cyc);}
return this;}
goToSimStart(){this.goTo(this.signal.waveData.startCycle);return this;}
goToSimEnd(){this.goTo(this.signal.waveData.endCycle);return this;}
step(cyc=1){return this.goTo(this.cyc+cyc);}
stepTransition(steps=1){this.transIndex+=SignalValue.TRANSITION_FIELDS*steps;this.cyc=this.getTransitionCycle();return this;}
forwardToValue(val){this.step();while(!this.offEnd()){if(this.asInt()===val){return true;}
this.stepTransition();}
return false;}
backToValue(val){this.step(-1);while(!this.offBegining()){if(this.asInt()===val){return true;}
this.stepTransition(0);this.step(-1);}
return false;}
goToNextValue(){return this.goToNextTransition();}
goToPrevValue(){return this.goToPrevTransition();}
nextCycle(){return this.goToNextCycle();}
prevCycle(){return this.goToNextCycle();}
asFixed(places,def){return this.asRealFixed(places,def);}
stepByCyc(cyc){return this.step(cyc);}
goToNextTransition(){return this.stepTransition(1);}
goToPrevTransition(){return this.stepTransition(-1);}
asBinaryStr(def){return this._asSomething(def,function(valStr){return valStr;});}
asHexStr(leadingZeroStr="0",def=void 0){return this._asSomething(def,function(valStr){var b,bit,digitVal,i,ret,v,xCnt;ret="";bit=0;while(bit<valStr.length){digitVal=0;xCnt=0;for(b=i=0;i<=3;b=++i){v=valStr[valStr.length-1-bit];if(v==="1"){digitVal+=1<<b;}else if((v!=="0")&&(v!==void 0)){xCnt++;}
bit++;}
ret=(xCnt===0?digitVal.toString(16):(xCnt<4?"x":"X"))+ret;if(leadingZeroStr!=="0"){while(ret[ret.length-1]==="0"&&ret.length>1){ret=ret.substring(1);}}}
return ret;});}
asIntStr(leadingZeroStr,signed,def){return this._asSomething(def,function(valStr){return Utils.unwrittenCode();});}
asString(def){return this._asSomething(def,(binaryStr)=>{var ch,charBinaryStr,len,ret;if((this.signal.width%8)!==0){return def;}
len=this.signal.width/8;ret="";ch=0;while(ch<len){charBinaryStr=binaryStr.substring(ch*8,(ch+1)*8);ret+=String.fromCharCode(parseInt(charBinaryStr,2));ch++;}
return ret;});}
asBool(def){return this._asSomething(def,function(valStr){if(valStr==="0"){return false;}else if(valStr==="1"){return true;}});}
asInt(def){return this._asSomething(def,function(valStr){return parseInt(valStr,2);});}
asReal(def){return this._asSomething(def,function(valStr){var denorm,exp,expStr,frac,fracStr,ret,signStr,str;str=valStr;expStr=str.substring(1,12);if(expStr==="11111111111"){return 0/0;}
denorm=expStr==="00000000000";signStr=str.substring(0,1);exp=parseInt(expStr,2)-1023;fracStr=str.substring(12);frac=parseInt((denorm?fracStr+"0":"1"+fracStr),2);ret=frac*Math.pow(2,exp-52);if(signStr==="1"){ret=-ret;}
return ret;});}
asRealFixed(places,def){return this.asReal(def).toFixed(places);}
jumpTo(cyc){this.transIndex=this.signal.getTransIndexOfCycle(cyc);this.cyc=cyc;return this;}};SignalValue.prototype.signal=null;SignalValue.prototype.transitions=null;SignalValue.prototype.cyc=-1;SignalValue.prototype.transIndex=null;SignalValue.TIME_SLOT_WIDTH=null;SignalValue.TRANSITION_FIELDS=null;return SignalValue;}).call(this);SignalValue.NonExistentSignalError=class NonExistentSignalError extends Error{constructor(message){super(message);this.name="NonExistentSignalError";}};define(function(require,exports,module){$=require("jquery");Utils=require("Utils");$.extend(SignalValue.prototype,module.config());return SignalValue;});}).call(this);