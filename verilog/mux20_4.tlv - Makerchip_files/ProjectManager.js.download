(function(){var $,Promise,WaveData,boundMethodCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new Error('Bound instance method accessed before binding');}};[$,Promise,WaveData]=[];define("Project",function(require,exports,module){var EventEmitter,Project,ProjectManager,Utils,messages,regexes;$=require("jquery");Utils=require("Utils");Promise=require("bluebird");EventEmitter=require("Project/eventemitter");WaveData=require("VCD");regexes={sandboxUserProject:/^\/sandbox(\/nda|\/alpha)?\/([a-zA-Z0-9][a-zA-Z0-9\.-_]*)\/([a-zA-Z0-9][a-zA-Z0-9\.-_]*)/};messages={confirmDelete:`Are you sure you want to delete this project?  This is final, and can't be undone.\n
Click 'OK' to permanantly delete your project.`,confirmUnsavedPending:`Autosave pending. Click 'cancel' or 'stay on this page' to ensure your changes are saved.`,confirmUnsaved:`Latest changes are unsaved.  Click 'cancel' or 'stay on this page' to ensure your changes are saved.`};ProjectManager=(function(){class ProjectManager{constructor(){this.initSave=this.initSave.bind(this);this.postProject=this.postProject.bind(this);this.save=this.save.bind(this);this.saveNeeded=this.saveNeeded.bind(this);this.canEdit=this.canEdit.bind(this);this.forceSave=this.forceSave.bind(this);$(window).on("popstate",(event)=>{if((event.originalEvent.state!=null)&&typeof event.originalEvent.state.path!=="undefined"&&event.originalEvent.state.path!==this.path){this.forceSave();this._forceUnload=true;return setTimeout((function(){return window.location.reload();}),0);}});}
url(){return `/project/${this.user}/${this.path}`;}
init(){var matches,url;if(matches=window.location.pathname.match(regexes.sandboxUserProject)){[url,this.access_level,this.user,this.path]=matches;this._firstInit=true;this.attach();}
$("body").on("click","[href='#new-project']",(e)=>{e.preventDefault();this.newProject();this.initSave();return this.attach();});$("body").on("click","[href='#clone-project']",(e)=>{e.preventDefault();this.cloneProject();return this.attach();});$("body").on("click","[href='#delete-project']",(e)=>{e.preventDefault();if(confirm(messages.confirmDelete)){this.deleteProject();return this.detach();}});window.onbeforeunload=()=>{if(this._editor&&!this._editor.editor.isClean(this.saveChangeGeneration)&&!this._forceUnload){messages.confirmUnsaved;}
return this.detach();};return Promise.resolve(this);}
attach(){return $.post(`/project/${this.user}/${this.path}/attach`,"");}
detach(){return navigator.sendBeacon(`/project/${this.user}/${this.path}/detach`,"");}
initSave(){if(!this._editor||this._initSave_listening){return;}
this._initSave_listening=true;this._saveState=null;return this._editor.editor.on("changes",()=>{return this.saveNeeded();});}
postProject(url,action,oldPath){var changeGeneration,fileObj,postDate;this._saveState="posted";changeGeneration=this._editor.editor.changeGeneration(false);postDate=new Date();fileObj={source:this._editor.editor.getValue()};return Promise.join($.post(url,fileObj,"json"),Promise.resolve({changeGeneration,postDate,path:this.path,oldPath})).then(([res,postData])=>{if(res.err){throw new Error(res.err);}
if(this.path===postData.path){this.saveChangeGeneration=postData.changeGeneration;this._saveState=null;if(!this._editor.editor.isClean(postData.changeGeneration)){this.saveNeeded();}
this.emit("saved",postData.postDate);return{res,postData};}}).catch((err)=>{this._saveState=false;this.saveChangeGeneration=-1;if(err.status&&err.status===422){this.emit("app error");}else{this.emit("save error");}
return console.log(`${action} failed.`);});}
save(path){if(this.path!==path){return;}
if(this._saveState!=="pending"){console.log("Bug: Saving when no save is pending");}
if(this._editor.editor.isClean(this.saveChangeGeneration)){this._saveState=null;return;}
this.emit("saving");return this.postProject(`${this.url()}/save/`,"Save",this.path);}
saveNeeded(){if(!this.user||!this.path){return this._saveState="modified";}else{return this.canEdit().then((canEdit)=>{var path,thisSave;if(!canEdit){this._saveState="modified";return;}
if(!this._saveState||this._saveState==="modified"){this._saveState="pending";thisSave=this.save;path=this.path;return setTimeout((function(){return thisSave(path);}),this.constructor.AUTOSAVE_MS*(this._saveState===false?3:1));}});}}
editor(_editor){this._editor=_editor;if(this._firstInit){this._firstInit=false;this.getProject();}
this._initSave_listening=false;this.initSave();return this;}
canEdit(force=false){if((this._canEdit!=null)&&!force){return Promise.resolve(this._canEdit);}
return Promise.resolve($.getJSON(`${this.url()}/canEdit/`)).then(({id,canEdit})=>{return this._canEdit=canEdit;}).catch((err)=>{var error;if(err.status&&err.status===400){this._canEdit=false;try{console.log(JSON.parse(err.responseText).err);}catch(error1){error=error1;console.log("Unable to save.");}
return Promise.resolve(false);}
throw err;});}
getProject(){this.projectAnalytics("open");return Promise.resolve($.get(`${this.url()}/contents/`,"json")).then(({id,name,value,lastEdit,vcd})=>{if(this._canEdit===true){this.emit("saved",new Date());}
if(name!==null){document.title=name+" - "+document.title;}
if(vcd!=null){this.vcd=true;this.emit("vcd",new WaveData(vcd,false));}
this._editor.setValue(value);this._editor.compile(true);this._editor.editor.getDoc().clearHistory();return this.saveChangeGeneration=this._editor.editor.changeGeneration(true);}).catch(function(err){return console.log(`Error fetching project: ${err}`);});}
projectAnalytics(action){if(typeof window.ga!=="function"){return;}
return window.ga("send",{hitType:"event",eventCategory:"Projects",eventAction:action,eventLabel:`${this.user}/${this.path}`});}
changeProject(res,oldPath,gaMessage){var id,path,url;({id,url,user:this.user,path}=res);window.history.replaceState({path:oldPath},null,window.location);this.path=path;window.history.pushState({path:this.path},null,url);this.projectAnalytics(gaMessage);this._saveState=null;this.canEdit(true);if(typeof window.ga==="function"){return window.ga("send","pageview",location.pathname);}}
forceSave(){if((this._canEdit!=null)&&this._canEdit&&this._editor&&this.user&&this.path&&this._saveState==="pending"){return this.save(this.path);}else{}}
newProject(){var oldPath;this.forceSave();oldPath=this.path;this.path=null;return this.postProject("/project/","New project",oldPath).then((stuff)=>{this.changeProject(stuff.res,stuff.postData.oldPath,"create");return window.alert("Be sure to bookmark this new project URL if you'll want to return to your work.");}).catch((function(err){}));}
cloneProject(){var oldPath,url;if(!this.user||!this.path){return;}
this.forceSave();url=this.url();oldPath=this.path;this.path=null;this.projectAnalytics("clone");return this.postProject(`${url}/clone/json/`,"Clone",oldPath).then((stuff)=>{this.changeProject(stuff.res,stuff.postData.oldPath,"create from clone");return window.alert("You are now working in a clone.\n"+"Be sure to bookmark this new URL if you'll want to return to your work.");}).catch((function(err){}));}
deleteProject(){if(!this.user||!this.path){return;}
return Promise.resolve($.get(`${this.url()}/delete/`,"json")).then(({id,url,user,path:path1})=>{this.user=user;this.path=path1;this.projectAnalytics("delete");return window.location=`/sandbox${this.access_level}/`;});}};ProjectManager.prototype.access_level=null;ProjectManager.prototype.user=null;ProjectManager.prototype.path=null;ProjectManager.prototype.vcd=false;ProjectManager.AUTOSAVE_MS=4000;ProjectManager.prototype.saveChangeGeneration=-1;ProjectManager.prototype._saveState=null;ProjectManager.prototype._forceUnload=false;return ProjectManager;}).call(this);Project=(function(){class Project extends ProjectManager{constructor(){super("Project");this.initIDE=this.initIDE.bind(this);}
initIDE(ide){boundMethodCheck(this,Project);this.ide=ide;this.editorPane=this.ide.editor;this.navTlvPane=this.ide.navtlv;this.graphPane=this.ide.graph;this.waveformPane=this.ide.viewer;this.vizPane=this.ide.viz;return this.logPane=this.ide.errorlog;}};Project.prototype.ide=null;Project.prototype.editorPane=null;Project.prototype.navTlvPane=null;Project.prototype.graphPane=null;Project.prototype.waveformPane=null;Project.prototype.vizPane=null;Project.prototype.logPane=null;return Project;}).call(this);Utils.extend(Project,module.config());Utils.extend(Project,EventEmitter.prototype);return Project;});}).call(this);