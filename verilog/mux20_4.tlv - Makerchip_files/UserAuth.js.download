(function(){define("UserAuth",function(require,exports,module){var $,Logging,Promise,UserAuth,Utils,baseApi,ref;$=require("jquery");Logging=require("Logging");Promise=require("bluebird");Utils=require("Utils");baseApi=(ref=window.BASE_API_URL)!=null?ref:"";UserAuth=(function(){class UserAuth{init(err){this.err=err;return this.isLoggedIn().then((isLoggedIn)=>{console.log(`Logged in: ${isLoggedIn}`);if(isLoggedIn){return this;}
return new Promise((resolve,reject)=>{return this.newAuth(()=>{return resolve(this);});});});}
isLoggedIn(retry=0){return Promise.resolve($.get(`${baseApi}/auth/hasAuth/`)).then(function(data){return data==="yes";}).catch(()=>{return Logging.WARN("Unable to fetch authentication status from the server").dev("Error fetching /auth/hasAuth/").loc("UserAuth","hasStoredAuth").attempts(retry).retry(()=>{return this.isLoggedIn(retry+1);}).send().display(this.err).retryPromise();});}
newAuth(cb,retry=0){return $.getJSON(`${baseApi}/auth/anon/`).done((data)=>{if(!data){return Logging.WARN("Unable to request authentication from the server: error given.").dev("No response from /auth/anon/").loc("UserAuth","newAuth").attempts(retry).retry(()=>{return this.newAuth(cb,retry+1);}).send().display(this.err);}
if(!data.id){return Logging.WARN("Unable to request authentication from the server: missing data.").dev("No ID included from /auth/anon/").loc("UserAuth","newAuth").attempts(retry).retry(()=>{return this.newAuth(cb,retry+1);}).send().display(this.err);}
Logging.DETAIL("got /auth/anon/").uid(data.id);this.id=data.id;return cb();}).fail(()=>{return Logging.WARN("Unable to request authentication from the server: connection failed.").dev("Failed to connect to /auth/anon/").loc("UserAuth","newAuth").attempts(retry).retry(()=>{return this.newAuth(cb,retry+1);}).send().display(this.err);});}};UserAuth.prototype.err=null;UserAuth.prototype.id=null;return UserAuth;}).call(this);Utils.extend(UserAuth,module.config());return UserAuth;});}).call(this);